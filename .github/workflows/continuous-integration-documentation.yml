name: Continuous Integration - Documentation

on: [push, pull_request]

jobs:
  continuous-integration-documentation:
    name: ${{ matrix.os }} - Python ${{ matrix.python-version }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        python-version: [3.11]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Environment Variables
      run: |
        echo "CI_PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV
        echo "CI_PACKAGE=colour" >> $GITHUB_ENV
        echo "CI_SHA=${{ github.sha }}" >> $GITHUB_ENV
        echo "MPLBACKEND=AGG" >> $GITHUB_ENV
        echo "COLOUR_SCIENCE__DOCUMENTATION_BUILD=True" >> $GITHUB_ENV
      shell: bash
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get --yes install graphviz graphviz-dev latexmk texlive-full
    - name: Install Poetry
      env:
        POETRY_VERSION: 1.4.0
      run: |
        curl -sSL https://install.python-poetry.org | POETRY_HOME=$HOME/.poetry python3 -
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      shell: bash
    - name: Install Package Dependencies
      run: |
        poetry run python -m pip install --upgrade pip
        poetry install
        poetry run python -c "import imageio;imageio.plugins.freeimage.download()"
      shell: bash
    - name: Build Documentation
      run: |
        poetry run invoke docs
      shell: bash
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.CI_PACKAGE }}-plots
        path: |
          docs/_static/Basics_*.png
          docs/_static/Examples_*.png
          docs/_static/Plotting_*.png
          docs/_static/Tutorial_*.png
