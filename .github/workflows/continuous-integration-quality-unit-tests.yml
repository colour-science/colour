name: Continuous Integration - Quality & Unit Tests

on: [push, pull_request]

jobs:
  continuous-integration-quality-unit-tests:
    name: ${{ matrix.os }} - Python ${{ matrix.python-version }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: ["3.10", 3.11, 3.12, 3.13]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Environment Variables
        run: |
          echo "CI_PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV
          echo "CI_PACKAGE=colour" >> $GITHUB_ENV
          echo "CI_SHA=${{ github.sha }}" >> $GITHUB_ENV
          echo "COVERALLS_REPO_TOKEN=${{ secrets.COVERALLS_REPO_TOKEN }}" >> $GITHUB_ENV
          echo "MPLBACKEND=AGG" >> $GITHUB_ENV
          # https://github.com/scipy/scipy/issues/20613
          echo "OMP_NUM_THREADS=1" >> $GITHUB_ENV
        shell: bash
      - name: Set up Python 3.10 for Pre-Commit
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies (macOS)
        if: matrix.os == 'macOS-latest'
        run: |
          brew install freeimage
          # TODO: Drop when https://github.com/imageio/imageio/issues/628 is addressed
          echo "IMAGEIO_FREEIMAGE_LIB=/opt/homebrew/Cellar/freeimage/3.18.0/lib/libfreeimage.3.18.0.dylib" >> $GITHUB_ENV
      - name: Install Dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get --yes install graphviz graphviz-dev
      - name: Install uv
        run: |
          pip install uv
        shell: bash
      - name: Install Package Dependencies
        run: |
          uv sync --all-extras --no-dev
          uv run python -c "import imageio;imageio.plugins.freeimage.download()"
        shell: bash
      - name: Install OpenImageIO (macOs)
        if: matrix.os == 'macOS-latest' && matrix.python-version == '3.12'
        run: |
          brew install openimageio
          ln -s /opt/homebrew/Cellar/openimageio/*/lib/python*/site-packages/OpenImageIO/OpenImageIO*.so ./.venv/lib/python3.12/site-packages/OpenImageIO.so
          uv run python -c "import OpenImageIO;print(OpenImageIO.__version__)"
        shell: bash
      - name: Pre-Commit (All Files)
        run: |
          uv run pre-commit run --all-files
        shell: bash
      - name: Test Optimised Python Execution
        run: |
          uv run python -OO -c "import $CI_PACKAGE"
        shell: bash
      - name: Test with Pytest
        run: |
          uv run python -W ignore -m pytest --doctest-modules --ignore=$CI_PACKAGE/examples --cov=$CI_PACKAGE $CI_PACKAGE
        shell: bash
      - name: Upload Coverage to coveralls.io
        if: matrix.os == 'macOS-latest' && matrix.python-version == '3.12'
        run: |
          if [ -z "$COVERALLS_REPO_TOKEN" ]; then echo \"COVERALLS_REPO_TOKEN\" secret is undefined!; else uv run coveralls; fi
        shell: bash
